{
	"name": "DF_Clean_Data_from_TSV",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText5",
						"type": "DatasetReference"
					},
					"name": "readTSVfile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Job_Id as string (\"10\")",
				"}",
				"source(output(",
				"          {License Issue Date} as string,",
				"          {License Number} as string,",
				"          {Animal's Name} as string,",
				"          Species as string,",
				"          {Primary Breed} as string,",
				"          {Secondary Breed} as string,",
				"          {ZIP Code} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false) ~> readTSVfile",
				"readTSVfile derive({License Issue Date} = toDate({License Issue Date}, 'MMMM dd yyyy'),",
				"          {Secondary Breed} = iifNull({Secondary Breed}, 'Unknown'),",
				"          {ZIP Code} = lpad(toString({ZIP Code}),5,'0'),",
				"          Species = upper(Species),",
				"          {License Number} = toInteger(translate({License Number},'S',\"\")),",
				"          {Animal's Name} = translate({Animal's Name},'()',\"\"),",
				"          Job_Exec_ID = $Job_Id,",
				"          Job_load_Date = currentDate()) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          {License Issue Date},",
				"          {License Number},",
				"          {Animal's Name},",
				"          Species,",
				"          {Primary Breed},",
				"          {Secondary Breed},",
				"          {ZIP Code},",
				"          Job_Exec_ID,",
				"          Job_load_Date",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LICENSE_ISSUE_DATE as string,",
				"          LICENSE_NUMBER as string,",
				"          ANIMAL_NAME as string,",
				"          SPECIES as string,",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          ZIP_CODE as string,",
				"          D1_LOB_ID as string,",
				"          D1_LOAD_DT as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          LICENSE_ISSUE_DATE = {License Issue Date},",
				"          LICENSE_NUMBER = {License Number},",
				"          ANIMAL_NAME = {Animal's Name},",
				"          SPECIES = Species,",
				"          PRIMARY_BREED = {Primary Breed},",
				"          SECONDARY_BREED = {Secondary Breed},",
				"          ZIP_CODE = {ZIP Code},",
				"          D1_LOB_ID = Job_Exec_ID,",
				"          D1_LOAD_DT = Job_load_Date",
				"     )) ~> sink1"
			]
		}
	}
}